---
--- Generated by Luanalysis
--- Created by lyrthras.
--- DateTime: 17/09/2021 3:14 AM
---



local ffi = require "ffi"

local function safeHeapAlloc(typeStr)
  -- automatically construct the pointer type from the base type
  local ptr_typestr = ffi.typeof("$ *", typeStr)

  -- how many bytes to allocate?
  local typesize    = ffi.sizeof(typeStr)

  -- do the allocation and cast the pointer result
  local ptr = ffi.cast(ptr_typestr, ffi.C.malloc(typesize))

  -- install the finalizer
  ffi.gc( ptr, ffi.C.free )

  return ptr
end







--[=[
function ra(s)return s and function(t)return t and ra(s..", "..t)or s;end or s;end

print(ra
  "hi""hello"
  "whats""up""yall"
  "did""you""know""that""in""terms""of""amogus"
  "vaporeon""is""the""most""sus"

  [[Random conversation at block "sussy's"]]

  "Hi!"
  "Hello!"
  "How are you?"
  "I'm good, you?"
  "binch"
  [[INTERNAL SCREAMING]]

  [[Silence]]
())


-- -- ------------------ -- --


local thing = ">>hel*2o^w.5r.3d<<"

function _eval(nv)
  _ = nv
  return _eval
end

function process(v)
  return function(f)
    _ = v
    return _eval(f)
  end
end

function filter()
  return function(p)
    if p then

    end
  end
end

process(thing)
  (filter() (_:sub(1,2) == ">>"))
  (filter() (_:sub(-2) == "<<"))
  (map() (_:sub(3,-3)))


--]=]